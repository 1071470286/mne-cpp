#version 400 core

layout( triangles, equal_spacing, cw ) in;

in vec3 tcPosition[];
in vec3 tcColor[];

out vec3 tePosition;
out vec3 teColor;
out vec3 tePatchDistance;

uniform mat4 projectionMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 mvp;

in Tess
{
  vec3 color;
} In[];

void main()
{
	vec3 p0 = gl_TessCoord.x * tcPosition[0];
    vec3 p1 = gl_TessCoord.y * tcPosition[1];
    vec3 p2 = gl_TessCoord.z * tcPosition[2];

    tePatchDistance = gl_TessCoord;

    tePosition = p0 + p1 + p2;
	
	teColor = In[0].color;

    gl_Position = mvp * vec4(tePosition, 1);
}
