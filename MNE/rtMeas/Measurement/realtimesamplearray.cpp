//=============================================================================================================
/**
* @file		realtimesamplearray.cpp
* @author	Christoph Dinh <christoph.dinh@live.de>;
* @version	1.0
* @date		October, 2010
*
* @section	LICENSE
*
* Copyright (C) 2010 Christoph Dinh. All rights reserved.
*
* No part of this program may be photocopied, reproduced,
* or translated to another program language without the
* prior written consent of the author.
*
*
* @brief	Contains the implementation of the RealTimeSampleArray class.
*
*/

//*************************************************************************************************************
//=============================================================================================================
// INCLUDES
//=============================================================================================================

#include "realtimesamplearray.h"


//*************************************************************************************************************
//=============================================================================================================
// QT INCLUDES
//=============================================================================================================


//*************************************************************************************************************
//=============================================================================================================
// USED NAMESPACES
//=============================================================================================================

using namespace CSART;
//using namespace IOBuffer;


//*************************************************************************************************************
//=============================================================================================================
// DEFINE MEMBER METHODS
//=============================================================================================================

RealTimeSampleArray::RealTimeSampleArray()
: Measurement()
, m_dMinValue(0)
, m_dMaxValue(65535)
, m_dSamplingRate(0)
, m_qString_Unit("")
, m_ucArraySize(10)

{

}


//*************************************************************************************************************

RealTimeSampleArray::~RealTimeSampleArray()
{

}


//*************************************************************************************************************

double RealTimeSampleArray::getValue() const
{
    return m_dValue;
}


//*************************************************************************************************************

void RealTimeSampleArray::setValue(double v)
{
    if(v < m_dMinValue) v = m_dMinValue;
    else if(v > m_dMaxValue) v = m_dMaxValue;
    m_dValue = v;
    m_vecSamples.push_back(m_dValue);
    if(m_vecSamples.size() >= m_ucArraySize && notifyEnabled)
    {
        notify();
        m_vecSamples.clear();
    }
}
